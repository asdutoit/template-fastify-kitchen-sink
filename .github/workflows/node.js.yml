name: Node.js CI with Yarn

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
  GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --name redis-container

    strategy:
      matrix:
        node-version: [18.x]
        mongodb-version: ["6.0"]

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js and Yarn
        uses: actions/setup-node@v3.8.1
        with:
          node-version: ${{ matrix.node-version }}
          # # Specify the Yarn version you want to use (e.g., '1.x' or '2.x')
          # # You can also specify a specific version (e.g., '1.22.11')
          # yarn-version: "1.x"

      - run: yarn install
        # If you need to install Prisma, you can run 'npx prisma generate' here
      - run: yarn test
        env:
          NODE_ENV: ${{secrets.NODE_ENV}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          REDIS_URL: ${{secrets.REDIS_URL}}
          REDIS_PORT: ${{secrets.REDIS_PORT}}
          GOOGLE_OAUTH_CLIENT_ID: ${{secrets.GOOGLE_OAUTH_CLIENT_ID}}
          GOOGLE_OAUTH_CLIENT_SECRET: ${{secrets.GOOGLE_OAUTH_CLIENT_SECRET}}
          REDIS_USERNAME: ""
          REDIS_PASSWORD: ""

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: "18.x"
          yarn-version: "1.x" # Specify the Yarn version you want to use here
      - run: yarn run build --if-present
